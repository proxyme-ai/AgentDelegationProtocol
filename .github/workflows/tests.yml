name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    env:
      AGENTS_FILE: /tmp/agents.json
      USERS_FILE: /tmp/users.json
      JWT_SECRET: test-secret-key-for-ci-testing-only-32-chars
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Initialize sample agent data
        run: |
          echo '{"agent-client-id": {"name": "CalendarAgent"}}' > "$AGENTS_FILE"
          echo '{"alice": "password123"}' > "$USERS_FILE"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          cd frontend && npm ci
      - name: Run Python linting
        run: |
          pip install black flake8
          black --check .
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Run Python tests with coverage
        run: |
          pytest -v --cov=. --cov-report=xml --cov-report=html
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
      - name: Run frontend tests
        run: |
          cd frontend && npm test
      - name: Run frontend linting
        run: |
          cd frontend && npm run lint
      - name: Build frontend
        run: |
          cd frontend && npm run build
      - name: Run e2e tests
        run: |
          cd frontend && npm run test:e2e
      - name: Security scan
        run: |
          pip install safety bandit
          safety check
          bandit -r . -f json -o bandit-report.json || true
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            coverage.xml
            htmlcov/
            bandit-report.json
